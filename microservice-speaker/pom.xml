<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright(c) 2016-2017 IBM, Red Hat, and others.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>microprofile-conference</artifactId>
        <groupId>io.microprofile.showcase</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>microservice-speaker</artifactId>
    <name>Conference :: Speaker</name>
    <description>The Speaker microservice resource</description>
    <packaging>war</packaging>

    <properties>
        <service.name>${project.artifactId}</service.name>
        <service.name>${project.artifactId}</service.name>
        <service.port>9191</service.port>
        <docker.user>example</docker.user>
        <icon>http://microprofile.io/app/images/logo.png</icon>
    </properties>

    <profiles>
        <profile>
            <id>fabric8</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <!--This plugin requires that you Docker environment variables are defined correctly, check them with:-->
                        <!--docker-machine env-->
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <configuration>
                            <mode>kubernetes</mode>
                            <images>
                                <image>
                                    <name>${docker.user}/${project.artifactId}:${project.version}</name>
                                    <build>
                                        <from>tomee:8-jdk-7.0.1-plus</from>
                                        <assembly>
                                            <basedir>/deployments</basedir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                    </build>
                                    <watch>
                                        <interval>5000</interval>
                                    </watch>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                    <!--<goal>deploy</goal>-->
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>liberty</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>copy-app-to-liberty</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>
                                        ${project.build.directory}/liberty/wlp/usr/servers/speakerServer/apps
                                    </outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>${warfile.name}.war</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-liberty-server</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>create-server</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>package-server</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>package-server</goal>
                                </goals>
                                <configuration>
                                    <packageFile>${project.build.directory}/${project.artifactId}${qualifier.jar}.jar
                                    </packageFile>
                                    <include>runnable</include>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <serverName>speakerServer</serverName>
                            <appArchive>${project.build.directory}/${warfile.name}.war</appArchive>
                            <configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
            <resource>
                <directory>${project.build.directory}/generated-sources/</directory>
                <includes>
                    <include>**/*.java</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.tomee.maven</groupId>
                <artifactId>tomee-maven-plugin</artifactId>
                <version>${version.tomee}</version>
                <configuration>
                    <warFile>${project.build.directory}/${warfile.name}.war</warFile>
                    <tomeeClassifier>webprofile</tomeeClassifier>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>io.microprofile.showcase.speaker.rest.cmd.base.TrapeaseCli</mainClass>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/cxf/bus-extensions.txt</resource>
                                </transformer>
                            </transformers>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.tomitribe</groupId>
                <artifactId>trapease-maven-plugin</artifactId>
                <version>1.0-SNAPSHOT</version>
                <configuration>
                    <modelPackage>io.microprofile.showcase.speaker.model</modelPackage>
                    <resourcePackage>io.microprofile.showcase.speaker.rest</resourcePackage>
                    <generateClient>true</generateClient>
                    <generateCmd>true</generateCmd>
                    <clientName>SpeakerClient</clientName>
                    <programFile>trapease</programFile>
                </configuration>
                <executions>
                    <execution>
                        <id>gen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pkg</id>
                        <phase>package</phase>
                        <goals>
                            <goal>really-executable-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.tomitribe</groupId>
            <artifactId>trapease-api</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--MODULE-->
        <dependency>
            <groupId>io.microprofile.showcase</groupId>
            <artifactId>demo-bootstrap</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!--3RD PARTY-->
        <dependency>
            <groupId>org.codehaus.swizzle</groupId>
            <artifactId>swizzle-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>arquillian-tomee-embedded</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.javacrumbs.json-unit</groupId>
            <artifactId>json-unit-fluent</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
